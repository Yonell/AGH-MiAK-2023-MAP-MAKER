
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AS_KEYWORD CITY_KEYWORD COLON COMMA CREATE_KEYWORD EOF LPAREN LSQUAREPAREN MAP_KEYWORD NEWLINE NUMBER ON_KEYWORD PLACE_KEYWORD RENDER_KEYWORD RIVER_KEYWORD ROAD_KEYWORD RPAREN RSQUAREPAREN STRING TERRAIN_KEYWORD VARNAME_ARGNAMEstart : instruction_iterator EOF\n             | EOFinstruction_iterator : instruction NEWLINE\n                            | instruction_iterator instruction NEWLINEinstruction : CREATE_KEYWORD type VARNAME_ARGNAME construction_argumentsinstruction : PLACE_KEYWORD type construction_arguments ON_KEYWORD VARNAME_ARGNAME coordinatesinstruction : PLACE_KEYWORD type VARNAME_ARGNAME construction_arguments ON_KEYWORD VARNAME_ARGNAME coordinatesinstruction : PLACE_KEYWORD VARNAME_ARGNAME ON_KEYWORD VARNAME_ARGNAME coordinatesinstruction : RENDER_KEYWORD VARNAME_ARGNAME optional_render_string optional_coordinatesoptional_render_string : AS_KEYWORD STRING\n                              | emptyoptional_coordinates : coordinates\n                            | emptytype : MAP_KEYWORD\n            | TERRAIN_KEYWORD\n            | CITY_KEYWORD\n            | ROAD_KEYWORD\n            | RIVER_KEYWORDconstruction_arguments : LPAREN argument_iterator RPARENargument_iterator : argument\n                         | argument_iterator COMMA argument\n                         | emptyargument : VARNAME_ARGNAME COLON valuevalue : NUMBER\n             | STRING\n             | list\n             | coordinateslist : LSQUAREPAREN list_item_iterator RSQUAREPARENlist_item_iterator : value\n                          | list_item_iterator COMMA value\n                          | emptycoordinates : LPAREN NUMBER COMMA NUMBER RPARENempty :'
    
_lr_action_items = {'EOF':([0,2,10,20,],[3,8,-3,-4,]),'CREATE_KEYWORD':([0,2,10,20,],[5,5,-3,-4,]),'PLACE_KEYWORD':([0,2,10,20,],[6,6,-3,-4,]),'RENDER_KEYWORD':([0,2,10,20,],[7,7,-3,-4,]),'$end':([1,3,8,],[0,-2,-1,]),'NEWLINE':([4,9,19,26,28,29,37,38,39,41,44,47,49,59,66,],[10,20,-33,-33,-11,-5,-9,-12,-13,-10,-19,-8,-6,-7,-32,]),'MAP_KEYWORD':([5,6,],[12,12,]),'TERRAIN_KEYWORD':([5,6,],[13,13,]),'CITY_KEYWORD':([5,6,],[14,14,]),'ROAD_KEYWORD':([5,6,],[15,15,]),'RIVER_KEYWORD':([5,6,],[16,16,]),'VARNAME_ARGNAME':([6,7,11,12,13,14,15,16,17,24,25,30,43,45,],[18,19,21,-14,-15,-16,-17,-18,23,35,36,42,50,35,]),'LPAREN':([12,13,14,15,16,17,19,21,23,26,28,36,41,42,46,50,57,65,],[-14,-15,-16,-17,-18,24,-33,24,24,40,-11,40,-10,40,40,40,40,40,]),'ON_KEYWORD':([18,22,31,44,],[25,30,43,-19,]),'AS_KEYWORD':([19,],[27,]),'RPAREN':([24,32,33,34,51,52,53,54,55,56,63,64,66,],[-33,44,-20,-22,-21,-23,-24,-25,-26,-27,66,-28,-32,]),'COMMA':([24,32,33,34,48,51,52,53,54,55,56,57,60,61,62,64,66,67,],[-33,45,-20,-22,58,-21,-23,-24,-25,-26,-27,-33,65,-29,-31,-28,-32,-30,]),'STRING':([27,46,57,65,],[41,54,54,54,]),'COLON':([35,],[46,]),'NUMBER':([40,46,57,58,65,],[48,53,53,63,53,]),'LSQUAREPAREN':([46,57,65,],[57,57,57,]),'RSQUAREPAREN':([53,54,55,56,57,60,61,62,64,66,67,],[-24,-25,-26,-27,-33,64,-29,-31,-28,-32,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instruction_iterator':([0,],[2,]),'instruction':([0,2,],[4,9,]),'type':([5,6,],[11,17,]),'construction_arguments':([17,21,23,],[22,29,31,]),'optional_render_string':([19,],[26,]),'empty':([19,24,26,57,],[28,34,39,62,]),'argument_iterator':([24,],[32,]),'argument':([24,45,],[33,51,]),'optional_coordinates':([26,],[37,]),'coordinates':([26,36,42,46,50,57,65,],[38,47,49,56,59,56,56,]),'value':([46,57,65,],[52,61,67,]),'list':([46,57,65,],[55,55,55,]),'list_item_iterator':([57,],[60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instruction_iterator EOF','start',2,'p_start','treemake.py',47),
  ('start -> EOF','start',1,'p_start','treemake.py',48),
  ('instruction_iterator -> instruction NEWLINE','instruction_iterator',2,'p_instruction_iterator','treemake.py',53),
  ('instruction_iterator -> instruction_iterator instruction NEWLINE','instruction_iterator',3,'p_instruction_iterator','treemake.py',54),
  ('instruction -> CREATE_KEYWORD type VARNAME_ARGNAME construction_arguments','instruction',4,'p_instruction_create','treemake.py',59),
  ('instruction -> PLACE_KEYWORD type construction_arguments ON_KEYWORD VARNAME_ARGNAME coordinates','instruction',6,'p_instruction_place_new_unnamed','treemake.py',81),
  ('instruction -> PLACE_KEYWORD type VARNAME_ARGNAME construction_arguments ON_KEYWORD VARNAME_ARGNAME coordinates','instruction',7,'p_instruction_place_new_named','treemake.py',100),
  ('instruction -> PLACE_KEYWORD VARNAME_ARGNAME ON_KEYWORD VARNAME_ARGNAME coordinates','instruction',5,'p_instruction_place_existing','treemake.py',128),
  ('instruction -> RENDER_KEYWORD VARNAME_ARGNAME optional_render_string optional_coordinates','instruction',4,'p_instruction_render','treemake.py',139),
  ('optional_render_string -> AS_KEYWORD STRING','optional_render_string',2,'p_optional_render_string','treemake.py',145),
  ('optional_render_string -> empty','optional_render_string',1,'p_optional_render_string','treemake.py',146),
  ('optional_coordinates -> coordinates','optional_coordinates',1,'p_optional_coordinates','treemake.py',155),
  ('optional_coordinates -> empty','optional_coordinates',1,'p_optional_coordinates','treemake.py',156),
  ('type -> MAP_KEYWORD','type',1,'p_type','treemake.py',165),
  ('type -> TERRAIN_KEYWORD','type',1,'p_type','treemake.py',166),
  ('type -> CITY_KEYWORD','type',1,'p_type','treemake.py',167),
  ('type -> ROAD_KEYWORD','type',1,'p_type','treemake.py',168),
  ('type -> RIVER_KEYWORD','type',1,'p_type','treemake.py',169),
  ('construction_arguments -> LPAREN argument_iterator RPAREN','construction_arguments',3,'p_construction_arguments','treemake.py',175),
  ('argument_iterator -> argument','argument_iterator',1,'p_argument_iterator','treemake.py',181),
  ('argument_iterator -> argument_iterator COMMA argument','argument_iterator',3,'p_argument_iterator','treemake.py',182),
  ('argument_iterator -> empty','argument_iterator',1,'p_argument_iterator','treemake.py',183),
  ('argument -> VARNAME_ARGNAME COLON value','argument',3,'p_argument','treemake.py',197),
  ('value -> NUMBER','value',1,'p_value','treemake.py',203),
  ('value -> STRING','value',1,'p_value','treemake.py',204),
  ('value -> list','value',1,'p_value','treemake.py',205),
  ('value -> coordinates','value',1,'p_value','treemake.py',206),
  ('list -> LSQUAREPAREN list_item_iterator RSQUAREPAREN','list',3,'p_list','treemake.py',212),
  ('list_item_iterator -> value','list_item_iterator',1,'p_list_item_iterator','treemake.py',218),
  ('list_item_iterator -> list_item_iterator COMMA value','list_item_iterator',3,'p_list_item_iterator','treemake.py',219),
  ('list_item_iterator -> empty','list_item_iterator',1,'p_list_item_iterator','treemake.py',220),
  ('coordinates -> LPAREN NUMBER COMMA NUMBER RPAREN','coordinates',5,'p_coordinates','treemake.py',232),
  ('empty -> <empty>','empty',0,'p_empty','treemake.py',238),
]
